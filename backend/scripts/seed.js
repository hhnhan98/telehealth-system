const mongoose = require('mongoose');
const dotenv = require('dotenv');
const bcrypt = require('bcryptjs');
const User = require('../models/User');
const Specialty = require('../models/Specialty');

dotenv.config();

mongoose.connect(process.env.MONGO_URI).then(() => {
  console.log('‚úÖ K·∫øt n·ªëi MongoDB th√†nh c√¥ng');
  seedData();
}).catch(err => console.error('‚ùå L·ªói k·∫øt n·ªëi MongoDB:', err));

async function seedData() {
  try {
    // X√≥a d·ªØ li·ªáu c≈©
    await User.deleteMany({});
    await Specialty.deleteMany({});
    console.log('üßπ ƒê√£ x√≥a d·ªØ li·ªáu c≈©');

    // T·∫°o c√°c chuy√™n khoa tr∆∞·ªõc
    const specialties = await Specialty.insertMany([
      { name: 'Tim m·∫°ch' },
      { name: 'N·ªôi ti·∫øt' },
      { name: 'Ti√™u h√≥a' },
    ]);
    console.log('‚úÖ ƒê√£ seed chuy√™n khoa');

    // L·∫•y ObjectId c·ªßa t·ª´ng chuy√™n khoa
    const timMach = specialties.find(s => s.name === 'Tim m·∫°ch');
    const noiTiet = specialties.find(s => s.name === 'N·ªôi ti·∫øt');

    const salt = await bcrypt.genSalt(10);

    await User.insertMany(users);
    console.log('‚úÖ Seed user th√†nh c√¥ng!');
    console.table(users.map(u => ({
      H·ªç_t√™n: u.fullName,
      Email: u.email,
      M·∫≠t_kh·∫©u: '123456',
      Vai_tr√≤: u.role,
    })));

    process.exit();
  } catch (err) {
    console.error('‚ùå L·ªói seed:', err);
    process.exit(1);
  }
}
